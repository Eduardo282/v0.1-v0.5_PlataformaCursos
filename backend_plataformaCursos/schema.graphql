type Query {
  login(email: String!, password: String!, alias: String): user
  verifyResetToken(token: String!): TokenVerification
}

type Mutation {
  signup(
    name: String!
    lastname: String!
    email: String!
    password: String!
  ): signup_data
  requestPasswordReset(email: String!): PasswordResetResponse
  resetPassword(token: String!, newPassword: String!): PasswordResetResponse
}

type user {
  id: String
  name: String
  lastname: String
  email: String
  alias: String
  active: Int
  current_role: String
  last_access: String
  token: String
  message: String
}

type signup_data {
  id: String
  name: String
  lastname: String
  email: String
  alias: String
  token: String
  message: String
}

type PasswordResetResponse {
  success: Boolean
  message: String
}

type TokenVerification {
  valid: Boolean
  email: String
  userName: String
  message: String
}

schema {
  query: Query
  mutation: Mutation
}
